{"version":3,"sources":["js/utils.js","components/AddTodo.js","components/TaskList.js","components/TodoList.js","App.js","index.js"],"names":["isNumber","num","isNaN","AddItem","props","initialTodo","id","name","currencyType","cost","complete","useState","todo","setTodo","handleInputChange","event","target","value","Number","onSubmit","preventDefault","str","isString","replace","addTask","className","type","placeholder","required","onChange","min","map","currency","TaskList","noCorrectData","todolist","every","checked","editTask","width","length","colSpan","align","index","cny","rub","usd","total","TodoList","totalData","useMemo","forEach","item","App","currencyName","1","2","3","setTodolist","CNY","RUB","USD","rateDict","setRateDict","convertCost","from","to","useEffect","a","axios","i","result","cnyExchangeRate","data","rate","window","alert","fetchData","toFixed","updatedTask","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.720edfe7.chunk.js","sourcesContent":["/**\r\n * 判断是否数字\r\n * @param {number}\r\n * @returns {boolean}\r\n */\r\nexport const isNumber = (num) => {\r\n  return typeof num === 'number' && !isNaN(num)\r\n}\r\n\r\n/**\r\n * 判断是否字符串且非空\r\n * @param {string}\r\n * @returns {boolean}\r\n */\r\nexport const isString = (str) => {\r\n  return typeof str === 'string' && str !== ''\r\n}\r\n\r\n/**\r\n *  去除首位空格\r\n * @param {string}\r\n * @returns {string}\r\n */\r\nexport const trimStr = (str) => {\r\n  return str.replace(/(^\\s*)|(\\s*$)/g, '')\r\n}\r\n","import { useState } from 'react'\r\nimport { isNumber, isString, trimStr } from '../js/utils.js'\r\n\r\nexport default function AddItem(props) {\r\n  const currencyType = [\r\n    { id: 1, name: 'RUB' },\r\n    { id: 2, name: 'CNY' },\r\n    { id: 3, name: 'USD' },\r\n  ]\r\n\r\n  const initialTodo = {\r\n    id: 0,\r\n    name: '',\r\n    currencyType: 1,\r\n    cost: '',\r\n    complete: false,\r\n  }\r\n  const [todo, setTodo] = useState(initialTodo)\r\n\r\n  const handleInputChange = (event) => {\r\n    let { name, value } = event.target\r\n    if (name === 'cost' || name === 'currencyType') {\r\n      value = Number(value)\r\n    }\r\n    setTodo({ ...todo, [name]: value })\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    if (isString(trimStr(todo.name)) && isNumber(todo.cost) && isNumber(todo.currencyType)) {\r\n      props.addTask(todo)\r\n      setTodo(initialTodo)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        placeholder=\"任务\"\r\n        value={todo.name}\r\n        name=\"name\"\r\n        required\r\n        onChange={handleInputChange}\r\n      ></input>\r\n      <input\r\n        className=\"input\"\r\n        type=\"number\"\r\n        min=\"0\"\r\n        value={todo.cost}\r\n        placeholder=\"价格\"\r\n        name=\"cost\"\r\n        required\r\n        onChange={handleInputChange}\r\n      ></input>\r\n      <select name=\"currencyType\" onChange={handleInputChange} value={todo.currencyType}>\r\n        {currencyType.map((currency) => (\r\n          <option key={currency.id} value={currency.id}>\r\n            {currency.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button className=\"addBtn\">添加</button>\r\n    </form>\r\n  )\r\n}\r\n","export default function TaskList(props) {\r\n  let noCorrectData = props.complete\r\n    ? props.todolist.every((todo) => !todo.complete)\r\n    : props.todolist.every((todo) => todo.complete)\r\n\r\n  const handleInputChange = (todo) => {\r\n    return (event) => {\r\n      todo.complete = event.target.checked\r\n      props.editTask(todo)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>{props.complete ? '已完成：' : '计划：'}</p>\r\n      <table width=\"100%\">\r\n        <tbody>\r\n          {props.todolist.length === 0 || noCorrectData ? (\r\n            <tr>\r\n              <td className=\"noData\" colSpan={5} align=\"center\">\r\n                暂无数据\r\n              </td>\r\n            </tr>\r\n          ) : (\r\n            props.todolist.map((todo, index) => {\r\n              if (props.complete === todo.complete) {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td width=\"30px\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={todo.complete}\r\n                        onChange={handleInputChange(todo)}\r\n                      />\r\n                    </td>\r\n                    <td width=\"30%\" className={todo.complete ? 'complete' : ''}>\r\n                      {todo.name}\r\n                    </td>\r\n                    <td>￥{todo.cny}</td>\r\n                    <td>₽{todo.rub}</td>\r\n                    <td>${todo.usd}</td>\r\n                  </tr>\r\n                )\r\n              }\r\n            })\r\n          )}\r\n          <tr className=\"lastLine\">\r\n            <td colSpan={2}>{props.complete ? '一共花了：' : '将要花费：'}</td>\r\n            <td>￥{props.total.cny}</td>\r\n            <td>₽{props.total.rub}</td>\r\n            <td>${props.total.usd}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useMemo, Fragment } from 'react'\r\nimport TaskList from './TaskList'\r\nimport { isNumber } from '../js/utils'\r\n\r\nexport default function TodoList(props) {\r\n  const totalData = useMemo(() => {\r\n    const total = {\r\n      complete: { cny: 0, rub: 0, usd: 0 },\r\n      todo: { cny: 0, rub: 0, usd: 0 },\r\n    }\r\n    let todolist = props.todolist\r\n    if (\r\n      todolist.length > 0 &&\r\n      todolist.every((todo) => isNumber(todo.cny) && isNumber(todo.rub) && isNumber(todo.usd))\r\n    ) {\r\n      todolist.forEach((item) => {\r\n        if (item.complete) {\r\n          total.complete.cny += item.cny\r\n          total.complete.rub += item.rub\r\n          total.complete.usd += item.usd\r\n        } else {\r\n          total.todo.cny += item.cny\r\n          total.todo.rub += item.rub\r\n          total.todo.usd += item.usd\r\n        }\r\n      })\r\n    }\r\n    return total\r\n  }, [props.todolist])\r\n\r\n  return (\r\n    <Fragment>\r\n      <TaskList\r\n        complete={false}\r\n        todolist={props.todolist}\r\n        total={totalData.todo}\r\n        editTask={props.editTask}\r\n      ></TaskList>\r\n      <TaskList\r\n        complete={true}\r\n        todolist={props.todolist}\r\n        total={totalData.complete}\r\n        editTask={props.editTask}\r\n      ></TaskList>\r\n    </Fragment>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport AddTodo from './components/AddTodo'\r\nimport TodoList from './components/TodoList'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  const currencyName = {\r\n    1: 'RUB',\r\n    2: 'CNY',\r\n    3: 'USD',\r\n  }\r\n\r\n  const [todolist, setTodolist] = useState([])\r\n  const [rateDict, setRateDict] = useState({ CNY: {}, RUB: {}, USD: {} })\r\n\r\n  const convertCost = (from, to, cost) => (from === to ? cost : cost * rateDict[from][to])\r\n\r\n  const editTask = (updatedTask) => {\r\n    setTodolist(todolist.map((todo) => (todo.id === updatedTask.id ? updatedTask : todo)))\r\n  }\r\n\r\n  const addTask = (todo) => {\r\n    todo.cny = convertCost(currencyName[todo.currencyType], 'CNY', todo.cost)\r\n    todo.rub = convertCost(currencyName[todo.currencyType], 'RUB', todo.cost)\r\n    todo.usd = convertCost(currencyName[todo.currencyType], 'USD', todo.cost)\r\n    todo.id = todolist.length + 1\r\n    setTodolist([...todolist, todo])\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await axios('https://api.globus.furniture/forex')\r\n        let cnyExchangeRate = result.data\r\n        let rate = {\r\n          CNY: {},\r\n          RUB: {},\r\n          USD: {},\r\n        }\r\n        for (let i in cnyExchangeRate) {\r\n          rate.CNY[i] = cnyExchangeRate[i].value\r\n        }\r\n        rate.USD.CNY = 1 / rate.CNY.USD\r\n        rate.USD.RUB = rate.USD.CNY * rate.CNY.RUB\r\n        rate.RUB.CNY = 1 / rate.CNY.RUB\r\n        rate.RUB.USD = 1 / rate.USD.RUB\r\n        setRateDict({ ...rate })\r\n      } catch (err) {\r\n        window.alert('Error occur!')\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <AddTodo addTask={addTask}></AddTodo>\r\n        <div className=\"right\">\r\n          <span>{rateDict.CNY.RUB ? rateDict.CNY.RUB.toFixed(3) : '...'}₽/¥ </span>\r\n          <span>{rateDict.USD.RUB ? rateDict.USD.RUB.toFixed(3) : '...'}₽/$ </span>\r\n          <span>{rateDict.USD.CNY ? rateDict.USD.CNY.toFixed(3) : '...'}¥/$</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <TodoList todolist={todolist} editTask={editTask}></TodoList>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}