{"version":3,"sources":["js/utils.js","components/AddTodo.js","components/TaskList.js","components/TodoList.js","App.js","index.js"],"names":["isNumber","num","isNaN","currencyType","id","name","initialTodo","cost","complete","AddTodo","props","addTask","useState","todo","setTodo","handleInputChange","event","target","value","Number","onSubmit","preventDefault","str","isString","replace","className","type","placeholder","required","onChange","min","map","currency","TaskList","todolist","editTask","total","noCorrectData","every","checked","width","length","colSpan","align","index","cny","rub","usd","TodoList","totalData","useMemo","forEach","item","currencyName","1","2","3","App","setTodolist","CNY","RUB","USD","rateDict","setRateDict","convertCost","from","to","useEffect","a","axios","i","result","cnyExchangeRate","data","rate","window","alert","fetchData","newTask","toFixed","updatedTask","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0d0bc1e.chunk.js","sourcesContent":["/**\r\n * 判断是否数字\r\n * @param {number}\r\n * @returns {boolean}\r\n */\r\nexport const isNumber = (num) => {\r\n  return typeof num === 'number' && !isNaN(num)\r\n}\r\n\r\n/**\r\n * 判断是否字符串且非空\r\n * @param {string}\r\n * @returns {boolean}\r\n */\r\nexport const isString = (str) => {\r\n  return typeof str === 'string' && str !== ''\r\n}\r\n\r\n/**\r\n *  去除首位空格\r\n * @param {string}\r\n * @returns {string}\r\n */\r\nexport const trimStr = (str) => {\r\n  return str.replace(/(^\\s*)|(\\s*$)/g, '')\r\n}\r\n","import { useState } from 'react'\r\nimport { isNumber, isString, trimStr } from '../js/utils.js'\r\n\r\nconst currencyType = [\r\n  { id: 1, name: 'RUB' },\r\n  { id: 2, name: 'CNY' },\r\n  { id: 3, name: 'USD' },\r\n]\r\n\r\nconst initialTodo = {\r\n  id: 0,\r\n  name: '',\r\n  currencyType: 1,\r\n  cost: '',\r\n  complete: false,\r\n}\r\n\r\nexport default function AddTodo(props) {\r\n  const { addTask } = props\r\n  const [todo, setTodo] = useState(initialTodo)\r\n\r\n  const handleInputChange = (event) => {\r\n    let { name, value } = event.target\r\n    if (name === 'cost' || name === 'currencyType') {\r\n      value = Number(value)\r\n    }\r\n    setTodo({ ...todo, [name]: value })\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    if (isString(trimStr(todo.name)) && isNumber(todo.cost) && isNumber(todo.currencyType)) {\r\n      addTask(todo)\r\n      setTodo(initialTodo)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        placeholder=\"任务\"\r\n        value={todo.name}\r\n        name=\"name\"\r\n        required\r\n        onChange={handleInputChange}\r\n      ></input>\r\n      <input\r\n        className=\"input\"\r\n        type=\"number\"\r\n        min=\"0\"\r\n        value={todo.cost}\r\n        placeholder=\"价格\"\r\n        name=\"cost\"\r\n        required\r\n        onChange={handleInputChange}\r\n      ></input>\r\n      <select name=\"currencyType\" onChange={handleInputChange} value={todo.currencyType}>\r\n        {currencyType.map((currency) => (\r\n          <option key={currency.id} value={currency.id}>\r\n            {currency.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button className=\"addBtn\">添加</button>\r\n    </form>\r\n  )\r\n}\r\n","export default function TaskList(props) {\r\n  const { complete, todolist, editTask, total } = props\r\n\r\n  let noCorrectData = complete\r\n    ? todolist.every((todo) => !todo.complete)\r\n    : todolist.every((todo) => todo.complete)\r\n\r\n  const handleInputChange = (todo) => {\r\n    return (event) => {\r\n      editTask({ ...todo, complete: event.target.checked })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>{complete ? '已完成：' : '计划：'}</p>\r\n      <table width=\"100%\">\r\n        <tbody>\r\n          {todolist.length === 0 || noCorrectData ? (\r\n            <tr>\r\n              <td className=\"noData\" colSpan={5} align=\"center\">\r\n                暂无数据\r\n              </td>\r\n            </tr>\r\n          ) : (\r\n            todolist.map((todo, index) => {\r\n              if (complete === todo.complete) {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td width=\"30px\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={todo.complete}\r\n                        onChange={handleInputChange(todo)}\r\n                      />\r\n                    </td>\r\n                    <td width=\"30%\" className={todo.complete ? 'complete' : ''}>\r\n                      {todo.name}\r\n                    </td>\r\n                    <td>￥{todo.cny}</td>\r\n                    <td>₽{todo.rub}</td>\r\n                    <td>${todo.usd}</td>\r\n                  </tr>\r\n                )\r\n              }\r\n            })\r\n          )}\r\n          <tr className=\"lastLine\">\r\n            <td colSpan={2}>{complete ? '一共花了：' : '将要花费：'}</td>\r\n            <td>￥{total.cny}</td>\r\n            <td>₽{total.rub}</td>\r\n            <td>${total.usd}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useMemo, Fragment } from 'react'\r\nimport TaskList from './TaskList'\r\nimport { isNumber } from '../js/utils'\r\n\r\nexport default function TodoList(props) {\r\n  const { todolist, editTask } = props\r\n  const totalData = useMemo(() => {\r\n    const total = {\r\n      complete: { cny: 0, rub: 0, usd: 0 },\r\n      todo: { cny: 0, rub: 0, usd: 0 },\r\n    }\r\n    if (\r\n      todolist.length > 0 &&\r\n      todolist.every((todo) => isNumber(todo.cny) && isNumber(todo.rub) && isNumber(todo.usd))\r\n    ) {\r\n      todolist.forEach((item) => {\r\n        if (item.complete) {\r\n          total.complete.cny += item.cny\r\n          total.complete.rub += item.rub\r\n          total.complete.usd += item.usd\r\n        } else {\r\n          total.todo.cny += item.cny\r\n          total.todo.rub += item.rub\r\n          total.todo.usd += item.usd\r\n        }\r\n      })\r\n    }\r\n    return total\r\n  }, [todolist])\r\n\r\n  return (\r\n    <Fragment>\r\n      <TaskList\r\n        complete={false}\r\n        todolist={todolist}\r\n        total={totalData.todo}\r\n        editTask={editTask}\r\n      ></TaskList>\r\n      <TaskList\r\n        complete={true}\r\n        todolist={todolist}\r\n        total={totalData.complete}\r\n        editTask={editTask}\r\n      ></TaskList>\r\n    </Fragment>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport AddTodo from './components/AddTodo'\r\nimport TodoList from './components/TodoList'\r\nimport './App.css'\r\n\r\nconst currencyName = {\r\n  1: 'RUB',\r\n  2: 'CNY',\r\n  3: 'USD',\r\n}\r\n\r\nfunction App() {\r\n  const [todolist, setTodolist] = useState([])\r\n  const [rateDict, setRateDict] = useState({ CNY: {}, RUB: {}, USD: {} })\r\n\r\n  const convertCost = (from, to, cost) => (from === to ? cost : cost * rateDict[from][to])\r\n\r\n  const handleEditTask = (updatedTask) => {\r\n    setTodolist(todolist.map((todo) => (todo.id === updatedTask.id ? updatedTask : todo)))\r\n  }\r\n\r\n  const handleAddTask = (todo) => {\r\n    const newTask = {\r\n      ...todo,\r\n      cny: convertCost(currencyName[todo.currencyType], 'CNY', todo.cost),\r\n      rub: convertCost(currencyName[todo.currencyType], 'RUB', todo.cost),\r\n      usd: convertCost(currencyName[todo.currencyType], 'USD', todo.cost),\r\n      id: todolist.length + 1,\r\n    }\r\n    setTodolist([...todolist, newTask])\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await axios('https://api.globus.furniture/forex')\r\n        let cnyExchangeRate = result.data\r\n        let rate = {\r\n          CNY: {},\r\n          RUB: {},\r\n          USD: {},\r\n        }\r\n        for (let i in cnyExchangeRate) {\r\n          rate.CNY[i] = cnyExchangeRate[i].value\r\n        }\r\n        rate.USD.CNY = 1 / rate.CNY.USD\r\n        rate.USD.RUB = rate.USD.CNY * rate.CNY.RUB\r\n        rate.RUB.CNY = 1 / rate.CNY.RUB\r\n        rate.RUB.USD = 1 / rate.USD.RUB\r\n        setRateDict({ ...rate })\r\n      } catch (err) {\r\n        window.alert('Error occur!')\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <AddTodo addTask={handleAddTask}></AddTodo>\r\n        <div className=\"right\">\r\n          <span>{rateDict.CNY.RUB ? rateDict.CNY.RUB.toFixed(3) : '...'}₽/¥ </span>\r\n          <span>{rateDict.USD.RUB ? rateDict.USD.RUB.toFixed(3) : '...'}₽/$ </span>\r\n          <span>{rateDict.USD.CNY ? rateDict.USD.CNY.toFixed(3) : '...'}¥/$</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <TodoList todolist={todolist} editTask={handleEditTask}></TodoList>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}