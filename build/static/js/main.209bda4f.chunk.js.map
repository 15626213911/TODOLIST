{"version":3,"sources":["js/utils.js","components/AddTodo.js","components/TaskList.js","components/TodoList.js","App.js","index.js"],"names":["isNumber","num","isNaN","currencyType","id","name","initialTodo","cost","complete","AddTodo","addTask","useState","todo","setTodo","handleInputChange","event","target","value","Number","onSubmit","preventDefault","str","isString","replace","className","type","placeholder","required","onChange","min","map","currency","TaskList","todolist","editTask","total","noCorrectData","every","checked","listElements","forEach","index","push","width","cny","rub","usd","length","colSpan","align","TodoList","totalData","useMemo","k","reduce","cur","currencyName","1","2","3","App","setTodolist","CNY","RUB","USD","rateDict","setRateDict","convertCost","from","to","useEffect","a","axios","i","result","cnyExchangeRate","data","rate","window","alert","fetchData","newTask","toFixed","updatedTask","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.209bda4f.chunk.js","sourcesContent":["/**\r\n * 判断是否数字\r\n * @param {number}\r\n * @returns {boolean}\r\n */\r\nexport const isNumber = (num) => {\r\n  return typeof num === 'number' && !isNaN(num)\r\n}\r\n\r\n/**\r\n * 判断是否字符串且非空\r\n * @param {string}\r\n * @returns {boolean}\r\n */\r\nexport const isString = (str) => {\r\n  return typeof str === 'string' && str !== ''\r\n}\r\n\r\n/**\r\n *  去除首位空格\r\n * @param {string}\r\n * @returns {string}\r\n */\r\nexport const trimStr = (str) => {\r\n  return str.replace(/(^\\s*)|(\\s*$)/g, '')\r\n}\r\n","import { useState } from 'react'\r\nimport { isNumber, isString, trimStr } from '../js/utils.js'\r\n\r\nconst currencyType = [\r\n  { id: 1, name: 'RUB' },\r\n  { id: 2, name: 'CNY' },\r\n  { id: 3, name: 'USD' },\r\n]\r\n\r\nconst initialTodo = {\r\n  id: 0,\r\n  name: '',\r\n  currencyType: 1,\r\n  cost: '',\r\n  complete: false,\r\n}\r\n\r\nexport default function AddTodo({ addTask }) {\r\n  const [todo, setTodo] = useState(initialTodo)\r\n\r\n  const handleInputChange = (event) => {\r\n    let { name, value } = event.target\r\n    if (name === 'cost' || name === 'currencyType') {\r\n      value = Number(value)\r\n    }\r\n    setTodo({ ...todo, [name]: value })\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    if (isString(trimStr(todo.name)) && isNumber(todo.cost) && isNumber(todo.currencyType)) {\r\n      addTask(todo)\r\n      setTodo(initialTodo)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        placeholder=\"任务\"\r\n        value={todo.name}\r\n        name=\"name\"\r\n        required\r\n        onChange={handleInputChange}\r\n      ></input>\r\n      <input\r\n        className=\"input\"\r\n        type=\"number\"\r\n        min=\"0\"\r\n        value={todo.cost}\r\n        placeholder=\"价格\"\r\n        name=\"cost\"\r\n        required\r\n        onChange={handleInputChange}\r\n      ></input>\r\n      <select name=\"currencyType\" onChange={handleInputChange} value={todo.currencyType}>\r\n        {currencyType.map((currency) => (\r\n          <option key={currency.id} value={currency.id}>\r\n            {currency.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button className=\"addBtn\">添加</button>\r\n    </form>\r\n  )\r\n}\r\n","export default function TaskList({ complete, todolist, editTask, total }) {\r\n  let noCorrectData = complete\r\n    ? todolist.every((todo) => !todo.complete)\r\n    : todolist.every((todo) => todo.complete)\r\n\r\n  const handleInputChange = (todo) => {\r\n    return (event) => {\r\n      editTask({ ...todo, complete: event.target.checked })\r\n    }\r\n  }\r\n\r\n  const listElements = []\r\n  todolist.forEach((todo, index) => {\r\n    if (complete === todo.complete) {\r\n      listElements.push(\r\n        <tr key={index}>\r\n          <td width=\"30px\">\r\n            <input type=\"checkbox\" checked={todo.complete} onChange={handleInputChange(todo)} />\r\n          </td>\r\n          <td width=\"30%\" className={todo.complete ? 'complete' : ''}>\r\n            {todo.name}\r\n          </td>\r\n          <td>￥{todo.cny}</td>\r\n          <td>₽{todo.rub}</td>\r\n          <td>${todo.usd}</td>\r\n        </tr>\r\n      )\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <p>{complete ? '已完成：' : '计划：'}</p>\r\n      <table width=\"100%\">\r\n        <tbody>\r\n          {todolist.length === 0 || noCorrectData ? (\r\n            <tr>\r\n              <td className=\"noData\" colSpan={5} align=\"center\">\r\n                暂无数据\r\n              </td>\r\n            </tr>\r\n          ) : (\r\n            listElements\r\n          )}\r\n          <tr className=\"lastLine\">\r\n            <td colSpan={2}>{complete ? '一共花了：' : '将要花费：'}</td>\r\n            <td>￥{total.cny}</td>\r\n            <td>₽{total.rub}</td>\r\n            <td>${total.usd}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useMemo, Fragment } from 'react'\r\nimport TaskList from './TaskList'\r\nimport { isNumber } from '../js/utils'\r\n\r\nexport default function TodoList({ todolist, editTask }) {\r\n  const totalData = useMemo(() => {\r\n    const total = {\r\n      complete: { cny: 0, rub: 0, usd: 0 },\r\n      todo: { cny: 0, rub: 0, usd: 0 },\r\n    }\r\n    if (\r\n      todolist.length > 0 &&\r\n      todolist.every((todo) => isNumber(todo.cny) && isNumber(todo.rub) && isNumber(todo.usd))\r\n    ) {\r\n      for (let k in total.complete) {\r\n        total.complete[k] = todolist.reduce((total, cur) => {\r\n          return cur.complete ? total + cur[k] : total\r\n        }, 0)\r\n      }\r\n      for (let k in total.todo) {\r\n        total.todo[k] = todolist.reduce((total, cur) => {\r\n          return cur.complete ? total : total + cur[k]\r\n        }, 0)\r\n      }\r\n    }\r\n    return total\r\n  }, [todolist])\r\n\r\n  return (\r\n    <Fragment>\r\n      <TaskList\r\n        complete={false}\r\n        todolist={todolist}\r\n        total={totalData.todo}\r\n        editTask={editTask}\r\n      ></TaskList>\r\n      <TaskList\r\n        complete={true}\r\n        todolist={todolist}\r\n        total={totalData.complete}\r\n        editTask={editTask}\r\n      ></TaskList>\r\n    </Fragment>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport AddTodo from './components/AddTodo'\r\nimport TodoList from './components/TodoList'\r\nimport './App.css'\r\n\r\nconst currencyName = {\r\n  1: 'RUB',\r\n  2: 'CNY',\r\n  3: 'USD',\r\n}\r\n\r\nfunction App() {\r\n  const [todolist, setTodolist] = useState([])\r\n  const [rateDict, setRateDict] = useState({ CNY: {}, RUB: {}, USD: {} })\r\n\r\n  const convertCost = (from, to, cost) => (from === to ? cost : cost * rateDict[from][to])\r\n\r\n  const handleEditTask = (updatedTask) => {\r\n    setTodolist(todolist.map((todo) => (todo.id === updatedTask.id ? updatedTask : todo)))\r\n  }\r\n\r\n  const handleAddTask = (todo) => {\r\n    const newTask = {\r\n      ...todo,\r\n      cny: convertCost(currencyName[todo.currencyType], 'CNY', todo.cost),\r\n      rub: convertCost(currencyName[todo.currencyType], 'RUB', todo.cost),\r\n      usd: convertCost(currencyName[todo.currencyType], 'USD', todo.cost),\r\n      id: todolist.length + 1,\r\n    }\r\n    setTodolist([...todolist, newTask])\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await axios('https://api.globus.furniture/forex')\r\n        let cnyExchangeRate = result.data\r\n        let rate = {\r\n          CNY: {},\r\n          RUB: {},\r\n          USD: {},\r\n        }\r\n        for (let i in cnyExchangeRate) {\r\n          rate.CNY[i] = cnyExchangeRate[i].value\r\n        }\r\n        rate.USD.CNY = 1 / rate.CNY.USD\r\n        rate.USD.RUB = rate.USD.CNY * rate.CNY.RUB\r\n        rate.RUB.CNY = 1 / rate.CNY.RUB\r\n        rate.RUB.USD = 1 / rate.USD.RUB\r\n        setRateDict({ ...rate })\r\n      } catch (err) {\r\n        window.alert('Error occur!')\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <AddTodo addTask={handleAddTask}></AddTodo>\r\n        <div className=\"right\">\r\n          <span>{rateDict.CNY.RUB ? rateDict.CNY.RUB.toFixed(3) : '...'}₽/¥ </span>\r\n          <span>{rateDict.USD.RUB ? rateDict.USD.RUB.toFixed(3) : '...'}₽/$ </span>\r\n          <span>{rateDict.USD.CNY ? rateDict.USD.CNY.toFixed(3) : '...'}¥/$</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <TodoList todolist={todolist} editTask={handleEditTask}></TodoList>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}